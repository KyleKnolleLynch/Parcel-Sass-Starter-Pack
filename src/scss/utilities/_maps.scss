@use 'sass:math';
@use '../abstracts' as a;

$utilities: (
  'padding': (
    'prefix': 'p',
    'values': (
      '0': 0,
      '1': a.$base-padding,
      '2': a.$base-padding * 2,
      '3': a.$base-padding * 4,
      '4': a.$base-padding * 6,
      '5': a.$base-padding * 8,
    ),
  ),
  'padding-left': (
    'prefix': 'pl',
    'values': (
      '0': 0,
      '1': a.$base-padding,
      '2': a.$base-padding * 2,
      '3': a.$base-padding * 4,
      '4': a.$base-padding * 6,
      '5': a.$base-padding * 8,
    ),
  ),
  'padding-right': (
    'prefix': 'pr',
    'values': (
      '0': 0,
      '1': a.$base-padding,
      '2': a.$base-padding * 2,
      '3': a.$base-padding * 4,
      '4': a.$base-padding * 6,
      '5': a.$base-padding * 8,
    ),
  ),
  'padding-top': (
    'prefix': 'pt',
    'values': (
      '0': 0,
      '1': a.$base-padding,
      '2': a.$base-padding * 2,
      '3': a.$base-padding * 4,
      '4': a.$base-padding * 6,
      '5': a.$base-padding * 8,
    ),
  ),
  'padding-bottom': (
    'prefix': 'pb',
    'values': (
      '0': 0,
      '1': a.$base-padding,
      '2': a.$base-padding * 2,
      '3': a.$base-padding * 4,
      '4': a.$base-padding * 6,
      '5': a.$base-padding * 8,
    ),
  ),
  'margin': (
    'prefix': 'm',
    'values': (
      '0': 0,
      '1': a.$base-margin,
      '2': a.$base-margin * 2,
      '3': a.$base-margin * 4,
      '4': a.$base-margin * 6,
      '5': a.$base-margin * 8,
    ),
  ),
  'margin-left': (
    'prefix': 'ml',
    'values': (
      '0': 0,
      '1': a.$base-margin,
      '2': a.$base-margin * 2,
      '3': a.$base-margin * 4,
      '4': a.$base-margin * 6,
      '5': a.$base-margin * 8,
    ),
  ),
  'margin-right': (
    'prefix': 'mr',
    'values': (
      '0': 0,
      '1': a.$base-margin,
      '2': a.$base-margin * 2,
      '3': a.$base-margin * 4,
      '4': a.$base-margin * 6,
      '5': a.$base-margin * 8,
    ),
  ),
  'margin-top': (
    'prefix': 'mt',
    'values': (
      '0': 0,
      '1': a.$base-margin,
      '2': a.$base-margin * 2,
      '3': a.$base-margin * 4,
      '4': a.$base-margin * 6,
      '5': a.$base-margin * 8,
    ),
  ),
  'margin-bottom': (
    'prefix': 'mb',
    'values': (
      '0': 0,
      '1': a.$base-margin,
      '2': a.$base-margin * 2,
      '3': a.$base-margin * 4,
      '4': a.$base-margin * 6,
      '5': a.$base-margin * 8,
    ),
  ),
  'opacity': (
    'prefix': 'o',
    'values': (
      '10': 0.1,
      '20': 0.2,
      '30': 0.3,
      '40': 0.4,
      '50': 0.5,
      '60': 0.6,
      '70': 0.7,
      '80': 0.8,
      '90': 0.9,
      '100': 1,
    ),
  ),
  'border-radius': (
    'prefix': 'br',
    'values': (
      'default': a.$base-border-radius,
      'none': 0,
      'xs': math.div(a.$base-border-radius, 4),
      'sm': math.div(a.$base-border-radius, 2),
      'lg': a.$base-border-radius * 2,
      'full': 50%,
    ),
  ),
  'display': (
    'prefix': 'display',
    'values': (
      'n': none,
      'b': block,
      'f': flex,
      'g': grid,
      'i': inline,
      'i-b': inline-block,
    ),
  ),
  'font-size': (
    'prefix': 'font',
    'values': (
      'sm': a.$font-size-sm,
      'reg': a.$base-font-size,
      'md': a.$font-size-md,
      'lg': a.$font-size-lg,
      'xl': a.$font-size-xl,
      '2xl': a.$font-size-2xl,
      '3xl': a.$font-size-3xl,
    ),
  ),
);

//  Generate utility classes
@each $property, $map in $utilities {
  $prefix: map-get($map, 'prefix');
  $values: map-get($map, 'values');

  @each $k, $v in $values {
    @if ($k == 'default') {
      .#{$prefix} {
        #{$property}: $v;
      }
    } @else {
      .#{$prefix}-#{$k} {
        #{$property}: $v;
      }
    }
  }
}

//  Generate color classes
@each $key, $val in a.$colors {

  @each $k, $v in $val {
    .text-#{$key}-#{$k} {
      color: $v;
    }
    .bg-#{$key}-#{$k} {
      background-color: $v;
    }
  }

}
